{"payload":{"allShortcutsEnabled":false,"fileTree":{"src/rollup":{"items":[{"name":"BridgeCreator.sol","path":"src/rollup/BridgeCreator.sol","contentType":"file"},{"name":"Config.sol","path":"src/rollup/Config.sol","contentType":"file"},{"name":"IRollupAdmin.sol","path":"src/rollup/IRollupAdmin.sol","contentType":"file"},{"name":"IRollupCore.sol","path":"src/rollup/IRollupCore.sol","contentType":"file"},{"name":"IRollupEventInbox.sol","path":"src/rollup/IRollupEventInbox.sol","contentType":"file"},{"name":"IRollupLogic.sol","path":"src/rollup/IRollupLogic.sol","contentType":"file"},{"name":"Node.sol","path":"src/rollup/Node.sol","contentType":"file"},{"name":"RollupAdminLogic.sol","path":"src/rollup/RollupAdminLogic.sol","contentType":"file"},{"name":"RollupCore.sol","path":"src/rollup/RollupCore.sol","contentType":"file"},{"name":"RollupCreator.sol","path":"src/rollup/RollupCreator.sol","contentType":"file"},{"name":"RollupEventInbox.sol","path":"src/rollup/RollupEventInbox.sol","contentType":"file"},{"name":"RollupLib.sol","path":"src/rollup/RollupLib.sol","contentType":"file"},{"name":"RollupProxy.sol","path":"src/rollup/RollupProxy.sol","contentType":"file"},{"name":"RollupUserLogic.sol","path":"src/rollup/RollupUserLogic.sol","contentType":"file"},{"name":"ValidatorUtils.sol","path":"src/rollup/ValidatorUtils.sol","contentType":"file"},{"name":"ValidatorWallet.sol","path":"src/rollup/ValidatorWallet.sol","contentType":"file"},{"name":"ValidatorWalletCreator.sol","path":"src/rollup/ValidatorWalletCreator.sol","contentType":"file"}],"totalCount":17},"src":{"items":[{"name":"bridge","path":"src/bridge","contentType":"directory"},{"name":"challenge","path":"src/challenge","contentType":"directory"},{"name":"libraries","path":"src/libraries","contentType":"directory"},{"name":"mocks","path":"src/mocks","contentType":"directory"},{"name":"node-interface","path":"src/node-interface","contentType":"directory"},{"name":"osp","path":"src/osp","contentType":"directory"},{"name":"precompiles","path":"src/precompiles","contentType":"directory"},{"name":"rollup","path":"src/rollup","contentType":"directory"},{"name":"state","path":"src/state","contentType":"directory"},{"name":"test-helpers","path":"src/test-helpers","contentType":"directory"}],"totalCount":10},"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":"deploy","path":"deploy","contentType":"directory"},{"name":"patches","path":"patches","contentType":"directory"},{"name":"scripts","path":"scripts","contentType":"directory"},{"name":"src","path":"src","contentType":"directory"},{"name":"test","path":"test","contentType":"directory"},{"name":".clabot","path":".clabot","contentType":"file"},{"name":".eslintrc.js","path":".eslintrc.js","contentType":"file"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":".prettierignore","path":".prettierignore","contentType":"file"},{"name":".prettierrc.js","path":".prettierrc.js","contentType":"file"},{"name":".solhint.json","path":".solhint.json","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"hardhat.config.ts","path":"hardhat.config.ts","contentType":"file"},{"name":"package.json","path":"package.json","contentType":"file"},{"name":"tsconfig.json","path":"tsconfig.json","contentType":"file"},{"name":"yarn.lock","path":"yarn.lock","contentType":"file"}],"totalCount":18}},"fileTreeProcessingTime":5.99768,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":637266749,"defaultBranch":"main","name":"nitro-contracts","ownerLogin":"OffchainLabs","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2023-05-07T02:46:58.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/43838009?v=4","public":true,"private":false,"isOrgOwned":true},"refInfo":{"name":"develop","listCacheKey":"v0:1689866049.0","canEdit":false,"refType":"branch","currentOid":"913028d43ab866e6902306504b2eb1caaac2e04e"},"path":"src/rollup/RollupCore.sol","currentUser":null,"blob":{"rawLines":["// Copyright 2021-2022, Offchain Labs, Inc.","// For license information, see https://github.com/OffchainLabs/nitro-contracts/blob/main/LICENSE","// SPDX-License-Identifier: BUSL-1.1","","pragma solidity ^0.8.0;","","import \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";","","import \"./Node.sol\";","import \"./RollupLib.sol\";","import \"./IRollupEventInbox.sol\";","import \"./IRollupCore.sol\";","","import \"../challenge/IChallengeManager.sol\";","","import \"../bridge/ISequencerInbox.sol\";","import \"../bridge/IBridge.sol\";","import \"../bridge/IOutbox.sol\";","","import \"../precompiles/ArbSys.sol\";","","import \"../libraries/ArbitrumChecker.sol\";","import {NO_CHAL_INDEX} from \"../libraries/Constants.sol\";","","abstract contract RollupCore is IRollupCore, PausableUpgradeable {","    using NodeLib for Node;","    using GlobalStateLib for GlobalState;","","    // Rollup Config","    uint64 public confirmPeriodBlocks;","    uint64 public extraChallengeTimeBlocks;","    uint256 public chainId;","    uint256 public baseStake;","    bytes32 public wasmModuleRoot;","","    IInbox public inbox;","    IBridge public bridge;","    IOutbox public outbox;","    ISequencerInbox public sequencerInbox;","    IRollupEventInbox public rollupEventInbox;","    IChallengeManager public override challengeManager;","","    // misc useful contracts when interacting with the rollup","    address public validatorUtils;","    address public validatorWalletCreator;","","    // when a staker loses a challenge, half of their funds get escrowed in this address","    address public loserStakeEscrow;","    address public stakeToken;","    uint256 public minimumAssertionPeriod;","","    mapping(address => bool) public isValidator;","","    // Stakers become Zombies after losing a challenge","    struct Zombie {","        address stakerAddress;","        uint64 latestStakedNode;","    }","","    uint64 private _latestConfirmed;","    uint64 private _firstUnresolvedNode;","    uint64 private _latestNodeCreated;","    uint64 private _lastStakeBlock;","    mapping(uint64 => Node) private _nodes;","    mapping(uint64 => mapping(address => bool)) private _nodeStakers;","","    address[] private _stakerList;","    mapping(address => Staker) public _stakerMap;","","    Zombie[] private _zombies;","","    mapping(address => uint256) private _withdrawableFunds;","    uint256 public totalWithdrawableFunds;","    uint256 public rollupDeploymentBlock;","","    // The node number of the initial node","    uint64 internal constant GENESIS_NODE = 0;","","    bool public validatorWhitelistDisabled;","","    // If the chain this RollupCore is deployed on is an Arbitrum chain.","    bool internal immutable _hostChainIsArbitrum = ArbitrumChecker.runningOnArbitrum();","    // If the chain RollupCore is deployed on, this will contain the ArbSys.blockNumber() at each node's creation.","    mapping(uint64 => uint256) internal _nodeCreatedAtArbSysBlock;","","    /**","     * @notice Get a storage reference to the Node for the given node index","     * @param nodeNum Index of the node","     * @return Node struct","     */","    function getNodeStorage(uint64 nodeNum) internal view returns (Node storage) {","        return _nodes[nodeNum];","    }","","    /**","     * @notice Get the Node for the given index.","     */","    function getNode(uint64 nodeNum) public view override returns (Node memory) {","        return getNodeStorage(nodeNum);","    }","","    /**","     * @notice Returns the block in which the given node was created for looking up its creation event.","     * Unlike the Node's createdAtBlock field, this will be the ArbSys blockNumber if the host chain is an Arbitrum chain.","     * That means that the block number returned for this is usable for event queries.","     * This function will revert if the given node number does not exist.","     * @dev This function is meant for internal use only and has no stability guarantees.","     */","    function getNodeCreationBlockForLogLookup(uint64 nodeNum)","        external","        view","        override","        returns (uint256)","    {","        if (_hostChainIsArbitrum) {","            uint256 blockNum = _nodeCreatedAtArbSysBlock[nodeNum];","            require(blockNum > 0, \"NO_NODE\");","            return blockNum;","        } else {","            Node storage node = getNodeStorage(nodeNum);","            require(node.deadlineBlock != 0, \"NO_NODE\");","            return node.createdAtBlock;","        }","    }","","    /**","     * @notice Check if the specified node has been staked on by the provided staker.","     * Only accurate at the latest confirmed node and afterwards.","     */","    function nodeHasStaker(uint64 nodeNum, address staker) public view override returns (bool) {","        return _nodeStakers[nodeNum][staker];","    }","","    /**","     * @notice Get the address of the staker at the given index","     * @param stakerNum Index of the staker","     * @return Address of the staker","     */","    function getStakerAddress(uint64 stakerNum) external view override returns (address) {","        return _stakerList[stakerNum];","    }","","    /**","     * @notice Check whether the given staker is staked","     * @param staker Staker address to check","     * @return True or False for whether the staker was staked","     */","    function isStaked(address staker) public view override returns (bool) {","        return _stakerMap[staker].isStaked;","    }","","    /**","     * @notice Check whether the given staker is staked on the latest confirmed node,","     * which includes if the staker is staked on a descendent of the latest confirmed node.","     * @param staker Staker address to check","     * @return True or False for whether the staker was staked","     */","    function isStakedOnLatestConfirmed(address staker) public view returns (bool) {","        return _stakerMap[staker].isStaked && nodeHasStaker(_latestConfirmed, staker);","    }","","    /**","     * @notice Get the latest staked node of the given staker","     * @param staker Staker address to lookup","     * @return Latest node staked of the staker","     */","    function latestStakedNode(address staker) public view override returns (uint64) {","        return _stakerMap[staker].latestStakedNode;","    }","","    /**","     * @notice Get the current challenge of the given staker","     * @param staker Staker address to lookup","     * @return Current challenge of the staker","     */","    function currentChallenge(address staker) public view override returns (uint64) {","        return _stakerMap[staker].currentChallenge;","    }","","    /**","     * @notice Get the amount staked of the given staker","     * @param staker Staker address to lookup","     * @return Amount staked of the staker","     */","    function amountStaked(address staker) public view override returns (uint256) {","        return _stakerMap[staker].amountStaked;","    }","","    /**","     * @notice Retrieves stored information about a requested staker","     * @param staker Staker address to retrieve","     * @return A structure with information about the requested staker","     */","    function getStaker(address staker) external view override returns (Staker memory) {","        return _stakerMap[staker];","    }","","    /**","     * @notice Get the original staker address of the zombie at the given index","     * @param zombieNum Index of the zombie to lookup","     * @return Original staker address of the zombie","     */","    function zombieAddress(uint256 zombieNum) public view override returns (address) {","        return _zombies[zombieNum].stakerAddress;","    }","","    /**","     * @notice Get Latest node that the given zombie at the given index is staked on","     * @param zombieNum Index of the zombie to lookup","     * @return Latest node that the given zombie is staked on","     */","    function zombieLatestStakedNode(uint256 zombieNum) public view override returns (uint64) {","        return _zombies[zombieNum].latestStakedNode;","    }","","    /**","     * @notice Retrieves stored information about a requested zombie","     * @param zombieNum Index of the zombie to lookup","     * @return A structure with information about the requested staker","     */","    function getZombieStorage(uint256 zombieNum) internal view returns (Zombie storage) {","        return _zombies[zombieNum];","    }","","    /// @return Current number of un-removed zombies","    function zombieCount() public view override returns (uint256) {","        return _zombies.length;","    }","","    function isZombie(address staker) public view override returns (bool) {","        for (uint256 i = 0; i < _zombies.length; i++) {","            if (staker == _zombies[i].stakerAddress) {","                return true;","            }","        }","        return false;","    }","","    /**","     * @notice Get the amount of funds withdrawable by the given address","     * @param user Address to check the funds of","     * @return Amount of funds withdrawable by user","     */","    function withdrawableFunds(address user) external view override returns (uint256) {","        return _withdrawableFunds[user];","    }","","    /**","     * @return Index of the first unresolved node","     * @dev If all nodes have been resolved, this will be latestNodeCreated + 1","     */","    function firstUnresolvedNode() public view override returns (uint64) {","        return _firstUnresolvedNode;","    }","","    /// @return Index of the latest confirmed node","    function latestConfirmed() public view override returns (uint64) {","        return _latestConfirmed;","    }","","    /// @return Index of the latest rollup node created","    function latestNodeCreated() public view override returns (uint64) {","        return _latestNodeCreated;","    }","","    /// @return Ethereum block that the most recent stake was created","    function lastStakeBlock() external view override returns (uint64) {","        return _lastStakeBlock;","    }","","    /// @return Number of active stakers currently staked","    function stakerCount() public view override returns (uint64) {","        return uint64(_stakerList.length);","    }","","    /**","     * @notice Initialize the core with an initial node","     * @param initialNode Initial node to start the chain with","     */","    function initializeCore(Node memory initialNode) internal {","        __Pausable_init();","        _nodes[GENESIS_NODE] = initialNode;","        _firstUnresolvedNode = GENESIS_NODE + 1;","        if (_hostChainIsArbitrum) {","            _nodeCreatedAtArbSysBlock[GENESIS_NODE] = ArbSys(address(100)).arbBlockNumber();","        }","    }","","    /**","     * @notice React to a new node being created by storing it an incrementing the latest node counter","     * @param node Node that was newly created","     */","    function nodeCreated(Node memory node) internal {","        _latestNodeCreated++;","        _nodes[_latestNodeCreated] = node;","        if (_hostChainIsArbitrum) {","            _nodeCreatedAtArbSysBlock[_latestNodeCreated] = ArbSys(address(100)).arbBlockNumber();","        }","    }","","    /// @notice Reject the next unresolved node","    function _rejectNextNode() internal {","        _firstUnresolvedNode++;","    }","","    function confirmNode(","        uint64 nodeNum,","        bytes32 blockHash,","        bytes32 sendRoot","    ) internal {","        Node storage node = getNodeStorage(nodeNum);","        // Authenticate data against node's confirm data pre-image","        require(node.confirmData == RollupLib.confirmHash(blockHash, sendRoot), \"CONFIRM_DATA\");","","        // trusted external call to outbox","        outbox.updateSendRoot(sendRoot, blockHash);","","        _latestConfirmed = nodeNum;","        _firstUnresolvedNode = nodeNum + 1;","","        emit NodeConfirmed(nodeNum, blockHash, sendRoot);","    }","","    /**","     * @notice Create a new stake at latest confirmed node","     * @param stakerAddress Address of the new staker","     * @param depositAmount Stake amount of the new staker","     */","    function createNewStake(address stakerAddress, uint256 depositAmount) internal {","        uint64 stakerIndex = uint64(_stakerList.length);","        _stakerList.push(stakerAddress);","        _stakerMap[stakerAddress] = Staker(","            depositAmount,","            stakerIndex,","            _latestConfirmed,","            NO_CHAL_INDEX, // new staker is not in challenge","            true","        );","        _nodeStakers[_latestConfirmed][stakerAddress] = true;","        _lastStakeBlock = uint64(block.number);","        emit UserStakeUpdated(stakerAddress, 0, depositAmount);","    }","","    /**","     * @notice Check to see whether the two stakers are in the same challenge","     * @param stakerAddress1 Address of the first staker","     * @param stakerAddress2 Address of the second staker","     * @return Address of the challenge that the two stakers are in","     */","    function inChallenge(address stakerAddress1, address stakerAddress2)","        internal","        view","        returns (uint64)","    {","        Staker storage staker1 = _stakerMap[stakerAddress1];","        Staker storage staker2 = _stakerMap[stakerAddress2];","        uint64 challenge = staker1.currentChallenge;","        require(challenge != NO_CHAL_INDEX, \"NO_CHAL\");","        require(challenge == staker2.currentChallenge, \"DIFF_IN_CHAL\");","        return challenge;","    }","","    /**","     * @notice Make the given staker as not being in a challenge","     * @param stakerAddress Address of the staker to remove from a challenge","     */","    function clearChallenge(address stakerAddress) internal {","        Staker storage staker = _stakerMap[stakerAddress];","        staker.currentChallenge = NO_CHAL_INDEX;","    }","","    /**","     * @notice Mark both the given stakers as engaged in the challenge","     * @param staker1 Address of the first staker","     * @param staker2 Address of the second staker","     * @param challenge Address of the challenge both stakers are now in","     */","    function challengeStarted(","        address staker1,","        address staker2,","        uint64 challenge","    ) internal {","        _stakerMap[staker1].currentChallenge = challenge;","        _stakerMap[staker2].currentChallenge = challenge;","    }","","    /**","     * @notice Add to the stake of the given staker by the given amount","     * @param stakerAddress Address of the staker to increase the stake of","     * @param amountAdded Amount of stake to add to the staker","     */","    function increaseStakeBy(address stakerAddress, uint256 amountAdded) internal {","        Staker storage staker = _stakerMap[stakerAddress];","        uint256 initialStaked = staker.amountStaked;","        uint256 finalStaked = initialStaked + amountAdded;","        staker.amountStaked = finalStaked;","        emit UserStakeUpdated(stakerAddress, initialStaked, finalStaked);","    }","","    /**","     * @notice Reduce the stake of the given staker to the given target","     * @param stakerAddress Address of the staker to reduce the stake of","     * @param target Amount of stake to leave with the staker","     * @return Amount of value released from the stake","     */","    function reduceStakeTo(address stakerAddress, uint256 target) internal returns (uint256) {","        Staker storage staker = _stakerMap[stakerAddress];","        uint256 current = staker.amountStaked;","        require(target <= current, \"TOO_LITTLE_STAKE\");","        uint256 amountWithdrawn = current - target;","        staker.amountStaked = target;","        increaseWithdrawableFunds(stakerAddress, amountWithdrawn);","        emit UserStakeUpdated(stakerAddress, current, target);","        return amountWithdrawn;","    }","","    /**","     * @notice Remove the given staker and turn them into a zombie","     * @param stakerAddress Address of the staker to remove","     */","    function turnIntoZombie(address stakerAddress) internal {","        Staker storage staker = _stakerMap[stakerAddress];","        _zombies.push(Zombie(stakerAddress, staker.latestStakedNode));","        deleteStaker(stakerAddress);","    }","","    /**","     * @notice Update the latest staked node of the zombie at the given index","     * @param zombieNum Index of the zombie to move","     * @param latest New latest node the zombie is staked on","     */","    function zombieUpdateLatestStakedNode(uint256 zombieNum, uint64 latest) internal {","        _zombies[zombieNum].latestStakedNode = latest;","    }","","    /**","     * @notice Remove the zombie at the given index","     * @param zombieNum Index of the zombie to remove","     */","    function removeZombie(uint256 zombieNum) internal {","        _zombies[zombieNum] = _zombies[_zombies.length - 1];","        _zombies.pop();","    }","","    /**","     * @notice Mark the given staker as staked on this node","     * @param staker Address of the staker to mark","     */","    function addStaker(uint64 nodeNum, address staker) internal {","        require(!_nodeStakers[nodeNum][staker], \"ALREADY_STAKED\");","        _nodeStakers[nodeNum][staker] = true;","        Node storage node = getNodeStorage(nodeNum);","        require(node.deadlineBlock != 0, \"NO_NODE\");","","        uint64 prevCount = node.stakerCount;","        node.stakerCount = prevCount + 1;","","        if (nodeNum > GENESIS_NODE) {","            Node storage parent = getNodeStorage(node.prevNum);","            parent.childStakerCount++;","            if (prevCount == 0) {","                parent.newChildConfirmDeadline(uint64(block.number) + confirmPeriodBlocks);","            }","        }","    }","","    /**","     * @notice Remove the given staker from this node","     * @param staker Address of the staker to remove","     */","    function removeStaker(uint64 nodeNum, address staker) internal {","        require(_nodeStakers[nodeNum][staker], \"NOT_STAKED\");","        _nodeStakers[nodeNum][staker] = false;","","        Node storage node = getNodeStorage(nodeNum);","        node.stakerCount--;","","        if (nodeNum > GENESIS_NODE) {","            getNodeStorage(node.prevNum).childStakerCount--;","        }","    }","","    /**","     * @notice Remove the given staker and return their stake","     * This should not be called if the staker is staked on a descendent of the latest confirmed node","     * @param stakerAddress Address of the staker withdrawing their stake","     */","    function withdrawStaker(address stakerAddress) internal {","        Staker storage staker = _stakerMap[stakerAddress];","        uint64 latestConfirmedNum = latestConfirmed();","        if (nodeHasStaker(latestConfirmedNum, stakerAddress)) {","            // Withdrawing a staker whose latest staked node isn't resolved should be impossible","            assert(staker.latestStakedNode == latestConfirmedNum);","            removeStaker(latestConfirmedNum, stakerAddress);","        }","        uint256 initialStaked = staker.amountStaked;","        increaseWithdrawableFunds(stakerAddress, initialStaked);","        deleteStaker(stakerAddress);","        emit UserStakeUpdated(stakerAddress, initialStaked, 0);","    }","","    /**","     * @notice Advance the given staker to the given node","     * @param stakerAddress Address of the staker adding their stake","     * @param nodeNum Index of the node to stake on","     */","    function stakeOnNode(address stakerAddress, uint64 nodeNum) internal {","        Staker storage staker = _stakerMap[stakerAddress];","        addStaker(nodeNum, stakerAddress);","        staker.latestStakedNode = nodeNum;","    }","","    /**","     * @notice Clear the withdrawable funds for the given address","     * @param account Address of the account to remove funds from","     * @return Amount of funds removed from account","     */","    function withdrawFunds(address account) internal returns (uint256) {","        uint256 amount = _withdrawableFunds[account];","        _withdrawableFunds[account] = 0;","        totalWithdrawableFunds -= amount;","        emit UserWithdrawableFundsUpdated(account, amount, 0);","        return amount;","    }","","    /**","     * @notice Increase the withdrawable funds for the given address","     * @param account Address of the account to add withdrawable funds to","     */","    function increaseWithdrawableFunds(address account, uint256 amount) internal {","        uint256 initialWithdrawable = _withdrawableFunds[account];","        uint256 finalWithdrawable = initialWithdrawable + amount;","        _withdrawableFunds[account] = finalWithdrawable;","        totalWithdrawableFunds += amount;","        emit UserWithdrawableFundsUpdated(account, initialWithdrawable, finalWithdrawable);","    }","","    /**","     * @notice Remove the given staker","     * @param stakerAddress Address of the staker to remove","     */","    function deleteStaker(address stakerAddress) private {","        Staker storage staker = _stakerMap[stakerAddress];","        require(staker.isStaked, \"NOT_STAKED\");","        uint64 stakerIndex = staker.index;","        _stakerList[stakerIndex] = _stakerList[_stakerList.length - 1];","        _stakerMap[_stakerList[stakerIndex]].index = stakerIndex;","        _stakerList.pop();","        delete _stakerMap[stakerAddress];","    }","","    struct StakeOnNewNodeFrame {","        uint256 currentInboxSize;","        Node node;","        bytes32 executionHash;","        Node prevNode;","        bytes32 lastHash;","        bool hasSibling;","        uint64 deadlineBlock;","        bytes32 sequencerBatchAcc;","    }","","    function createNewNode(","        Assertion calldata assertion,","        uint64 prevNodeNum,","        uint256 prevNodeInboxMaxCount,","        bytes32 expectedNodeHash","    ) internal returns (bytes32 newNodeHash) {","        require(","            assertion.afterState.machineStatus == MachineStatus.FINISHED ||","                assertion.afterState.machineStatus == MachineStatus.ERRORED,","            \"BAD_AFTER_STATUS\"","        );","","        StakeOnNewNodeFrame memory memoryFrame;","        {","            // validate data","            memoryFrame.prevNode = getNode(prevNodeNum);","            memoryFrame.currentInboxSize = bridge.sequencerMessageCount();","","            // Make sure the previous state is correct against the node being built on","            require(","                RollupLib.stateHash(assertion.beforeState, prevNodeInboxMaxCount) ==","                    memoryFrame.prevNode.stateHash,","                \"PREV_STATE_HASH\"","            );","","            // Ensure that the assertion doesn't read past the end of the current inbox","            uint64 afterInboxCount = assertion.afterState.globalState.getInboxPosition();","            uint64 prevInboxPosition = assertion.beforeState.globalState.getInboxPosition();","            require(afterInboxCount >= prevInboxPosition, \"INBOX_BACKWARDS\");","            if (afterInboxCount == prevInboxPosition) {","                require(","                    assertion.afterState.globalState.getPositionInMessage() >=","                        assertion.beforeState.globalState.getPositionInMessage(),","                    \"INBOX_POS_IN_MSG_BACKWARDS\"","                );","            }","            // See validator/assertion.go ExecutionState RequiredBatches() for reasoning","            if (","                assertion.afterState.machineStatus == MachineStatus.ERRORED ||","                assertion.afterState.globalState.getPositionInMessage() > 0","            ) {","                // The current inbox message was read","                afterInboxCount++;","            }","            require(afterInboxCount <= memoryFrame.currentInboxSize, \"INBOX_PAST_END\");","            // This gives replay protection against the state of the inbox","            if (afterInboxCount > 0) {","                memoryFrame.sequencerBatchAcc = bridge.sequencerInboxAccs(afterInboxCount - 1);","            }","        }","","        {","            memoryFrame.executionHash = RollupLib.executionHash(assertion);","","            memoryFrame.deadlineBlock = uint64(block.number) + confirmPeriodBlocks;","","            memoryFrame.hasSibling = memoryFrame.prevNode.latestChildNumber > 0;","            // here we don't use ternacy operator to remain compatible with slither","            if (memoryFrame.hasSibling) {","                memoryFrame.lastHash = getNodeStorage(memoryFrame.prevNode.latestChildNumber)","                    .nodeHash;","            } else {","                memoryFrame.lastHash = memoryFrame.prevNode.nodeHash;","            }","","            newNodeHash = RollupLib.nodeHash(","                memoryFrame.hasSibling,","                memoryFrame.lastHash,","                memoryFrame.executionHash,","                memoryFrame.sequencerBatchAcc,","                wasmModuleRoot","            );","            require(","                newNodeHash == expectedNodeHash || expectedNodeHash == bytes32(0),","                \"UNEXPECTED_NODE_HASH\"","            );","","            memoryFrame.node = NodeLib.createNode(","                RollupLib.stateHash(assertion.afterState, memoryFrame.currentInboxSize),","                RollupLib.challengeRootHash(","                    memoryFrame.executionHash,","                    block.number,","                    wasmModuleRoot","                ),","                RollupLib.confirmHash(assertion),","                prevNodeNum,","                memoryFrame.deadlineBlock,","                newNodeHash","            );","        }","","        {","            uint64 nodeNum = latestNodeCreated() + 1;","","            // Fetch a storage reference to prevNode since we copied our other one into memory","            // and we don't have enough stack available to keep to keep the previous storage reference around","            Node storage prevNode = getNodeStorage(prevNodeNum);","            prevNode.childCreated(nodeNum);","","            nodeCreated(memoryFrame.node);","        }","","        emit NodeCreated(","            latestNodeCreated(),","            memoryFrame.prevNode.nodeHash,","            newNodeHash,","            memoryFrame.executionHash,","            assertion,","            memoryFrame.sequencerBatchAcc,","            wasmModuleRoot,","            memoryFrame.currentInboxSize","        );","","        return newNodeHash;","    }","}"],"stylingDirectives":[[{"start":0,"end":43,"cssClass":"pl-c"}],[{"start":0,"end":97,"cssClass":"pl-c"}],[{"start":0,"end":36,"cssClass":"pl-c"}],[],[{"start":0,"end":15,"cssClass":"pl-k"},{"start":16,"end":17,"cssClass":"pl-k"},{"start":17,"end":22,"cssClass":"pl-c1"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":77,"cssClass":"pl-s"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":19,"cssClass":"pl-s"}],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":24,"cssClass":"pl-s"}],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":32,"cssClass":"pl-s"}],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":26,"cssClass":"pl-s"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":43,"cssClass":"pl-s"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":38,"cssClass":"pl-s"}],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":30,"cssClass":"pl-s"}],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":30,"cssClass":"pl-s"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":34,"cssClass":"pl-s"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":41,"cssClass":"pl-s"}],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":23,"end":27,"cssClass":"pl-k"},{"start":28,"end":56,"cssClass":"pl-s"}],[],[{"start":0,"end":8,"cssClass":"pl-k"},{"start":9,"end":17,"cssClass":"pl-k"},{"start":18,"end":28,"cssClass":"pl-en"},{"start":29,"end":31,"cssClass":"pl-k"},{"start":32,"end":43,"cssClass":"pl-en"},{"start":45,"end":64,"cssClass":"pl-en"}],[{"start":4,"end":17,"cssClass":"pl-k"},{"start":9,"end":17,"cssClass":"pl-en"},{"start":18,"end":21,"cssClass":"pl-k"}],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":9,"end":24,"cssClass":"pl-en"},{"start":25,"end":28,"cssClass":"pl-k"}],[],[{"start":4,"end":20,"cssClass":"pl-c"}],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":17,"cssClass":"pl-k"}],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":17,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[],[{"start":11,"end":17,"cssClass":"pl-k"}],[{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":20,"end":26,"cssClass":"pl-k"}],[{"start":22,"end":28,"cssClass":"pl-k"}],[{"start":22,"end":28,"cssClass":"pl-k"},{"start":29,"end":37,"cssClass":"pl-k"}],[],[{"start":4,"end":61,"cssClass":"pl-c"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[],[{"start":4,"end":88,"cssClass":"pl-c"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[],[{"start":4,"end":11,"cssClass":"pl-k"},{"start":12,"end":19,"cssClass":"pl-c1"},{"start":20,"end":22,"cssClass":"pl-k"},{"start":23,"end":27,"cssClass":"pl-c1"},{"start":29,"end":35,"cssClass":"pl-k"}],[],[{"start":4,"end":54,"cssClass":"pl-c"}],[{"start":4,"end":17,"cssClass":"pl-k"},{"start":10,"end":17,"cssClass":"pl-en"}],[{"start":8,"end":15,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-k"},{"start":12,"end":18,"cssClass":"pl-c1"},{"start":19,"end":21,"cssClass":"pl-k"},{"start":28,"end":35,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-k"},{"start":12,"end":18,"cssClass":"pl-c1"},{"start":19,"end":21,"cssClass":"pl-k"},{"start":22,"end":29,"cssClass":"pl-k"},{"start":30,"end":37,"cssClass":"pl-c1"},{"start":38,"end":40,"cssClass":"pl-k"},{"start":41,"end":45,"cssClass":"pl-c1"},{"start":48,"end":55,"cssClass":"pl-k"}],[],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":14,"end":21,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-k"},{"start":12,"end":19,"cssClass":"pl-c1"},{"start":20,"end":22,"cssClass":"pl-k"},{"start":31,"end":37,"cssClass":"pl-k"}],[],[{"start":13,"end":20,"cssClass":"pl-k"}],[],[{"start":4,"end":11,"cssClass":"pl-k"},{"start":12,"end":19,"cssClass":"pl-c1"},{"start":20,"end":22,"cssClass":"pl-k"},{"start":23,"end":30,"cssClass":"pl-c1"},{"start":32,"end":39,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":4,"end":11,"cssClass":"pl-c1"},{"start":12,"end":18,"cssClass":"pl-k"}],[],[{"start":4,"end":42,"cssClass":"pl-c"}],[{"start":4,"end":10,"cssClass":"pl-c1"},{"start":11,"end":29,"cssClass":"pl-k"},{"start":42,"end":43,"cssClass":"pl-k"},{"start":44,"end":45,"cssClass":"pl-c1"}],[],[{"start":4,"end":8,"cssClass":"pl-c1"},{"start":9,"end":15,"cssClass":"pl-k"}],[],[{"start":4,"end":72,"cssClass":"pl-c"}],[{"start":4,"end":8,"cssClass":"pl-c1"},{"start":9,"end":28,"cssClass":"pl-k"},{"start":49,"end":50,"cssClass":"pl-k"},{"start":67,"end":84,"cssClass":"pl-en"}],[{"start":4,"end":114,"cssClass":"pl-c"}],[{"start":4,"end":11,"cssClass":"pl-k"},{"start":12,"end":18,"cssClass":"pl-c1"},{"start":19,"end":21,"cssClass":"pl-k"},{"start":22,"end":29,"cssClass":"pl-c1"},{"start":31,"end":39,"cssClass":"pl-k"}],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":75,"cssClass":"pl-c"}],[{"start":0,"end":39,"cssClass":"pl-c"}],[{"start":0,"end":26,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":28,"end":34,"cssClass":"pl-c1"},{"start":35,"end":42,"cssClass":"pl-v"},{"start":44,"end":52,"cssClass":"pl-k"},{"start":53,"end":57,"cssClass":"pl-k"},{"start":58,"end":65,"cssClass":"pl-k"},{"start":72,"end":79,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":48,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":20,"cssClass":"pl-k"},{"start":12,"end":20,"cssClass":"pl-en"},{"start":21,"end":27,"cssClass":"pl-c1"},{"start":28,"end":35,"cssClass":"pl-v"},{"start":37,"end":43,"cssClass":"pl-k"},{"start":44,"end":48,"cssClass":"pl-k"},{"start":49,"end":57,"cssClass":"pl-k"},{"start":58,"end":65,"cssClass":"pl-k"},{"start":72,"end":78,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":29,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":103,"cssClass":"pl-c"}],[{"start":0,"end":122,"cssClass":"pl-c"}],[{"start":0,"end":86,"cssClass":"pl-c"}],[{"start":0,"end":73,"cssClass":"pl-c"}],[{"start":0,"end":89,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":45,"cssClass":"pl-k"},{"start":12,"end":45,"cssClass":"pl-en"},{"start":46,"end":52,"cssClass":"pl-c1"},{"start":53,"end":60,"cssClass":"pl-v"}],[{"start":8,"end":16,"cssClass":"pl-k"}],[{"start":8,"end":12,"cssClass":"pl-k"}],[{"start":8,"end":16,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":17,"end":24,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"}],[{"start":12,"end":19,"cssClass":"pl-c1"},{"start":29,"end":30,"cssClass":"pl-k"}],[{"start":12,"end":19,"cssClass":"pl-k"},{"start":29,"end":30,"cssClass":"pl-k"},{"start":31,"end":32,"cssClass":"pl-c1"},{"start":34,"end":43,"cssClass":"pl-s"}],[{"start":12,"end":18,"cssClass":"pl-k"}],[{"start":10,"end":14,"cssClass":"pl-k"}],[{"start":17,"end":24,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"},{"start":32,"end":46,"cssClass":"pl-en"}],[{"start":12,"end":19,"cssClass":"pl-k"},{"start":39,"end":41,"cssClass":"pl-k"},{"start":42,"end":43,"cssClass":"pl-c1"},{"start":45,"end":54,"cssClass":"pl-s"}],[{"start":12,"end":18,"cssClass":"pl-k"}],[],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":85,"cssClass":"pl-c"}],[{"start":0,"end":65,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":26,"cssClass":"pl-k"},{"start":12,"end":26,"cssClass":"pl-en"},{"start":27,"end":33,"cssClass":"pl-c1"},{"start":34,"end":41,"cssClass":"pl-v"},{"start":43,"end":50,"cssClass":"pl-c1"},{"start":51,"end":57,"cssClass":"pl-v"},{"start":59,"end":65,"cssClass":"pl-k"},{"start":66,"end":70,"cssClass":"pl-k"},{"start":71,"end":79,"cssClass":"pl-k"},{"start":80,"end":87,"cssClass":"pl-k"},{"start":89,"end":93,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":63,"cssClass":"pl-c"}],[{"start":0,"end":43,"cssClass":"pl-c"}],[{"start":0,"end":36,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":29,"cssClass":"pl-k"},{"start":12,"end":29,"cssClass":"pl-en"},{"start":30,"end":36,"cssClass":"pl-c1"},{"start":37,"end":46,"cssClass":"pl-v"},{"start":48,"end":56,"cssClass":"pl-k"},{"start":57,"end":61,"cssClass":"pl-k"},{"start":62,"end":70,"cssClass":"pl-k"},{"start":71,"end":78,"cssClass":"pl-k"},{"start":80,"end":87,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":55,"cssClass":"pl-c"}],[{"start":0,"end":44,"cssClass":"pl-c"}],[{"start":0,"end":62,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":21,"cssClass":"pl-k"},{"start":12,"end":21,"cssClass":"pl-en"},{"start":22,"end":29,"cssClass":"pl-c1"},{"start":30,"end":36,"cssClass":"pl-v"},{"start":38,"end":44,"cssClass":"pl-k"},{"start":45,"end":49,"cssClass":"pl-k"},{"start":50,"end":58,"cssClass":"pl-k"},{"start":59,"end":66,"cssClass":"pl-k"},{"start":68,"end":72,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":85,"cssClass":"pl-c"}],[{"start":0,"end":91,"cssClass":"pl-c"}],[{"start":0,"end":44,"cssClass":"pl-c"}],[{"start":0,"end":62,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":38,"cssClass":"pl-k"},{"start":12,"end":38,"cssClass":"pl-en"},{"start":39,"end":46,"cssClass":"pl-c1"},{"start":47,"end":53,"cssClass":"pl-v"},{"start":55,"end":61,"cssClass":"pl-k"},{"start":62,"end":66,"cssClass":"pl-k"},{"start":67,"end":74,"cssClass":"pl-k"},{"start":76,"end":80,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":43,"end":45,"cssClass":"pl-k"},{"start":46,"end":59,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":61,"cssClass":"pl-c"}],[{"start":0,"end":45,"cssClass":"pl-c"}],[{"start":0,"end":47,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":29,"cssClass":"pl-k"},{"start":12,"end":29,"cssClass":"pl-en"},{"start":30,"end":37,"cssClass":"pl-c1"},{"start":38,"end":44,"cssClass":"pl-v"},{"start":46,"end":52,"cssClass":"pl-k"},{"start":53,"end":57,"cssClass":"pl-k"},{"start":58,"end":66,"cssClass":"pl-k"},{"start":67,"end":74,"cssClass":"pl-k"},{"start":76,"end":82,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":60,"cssClass":"pl-c"}],[{"start":0,"end":45,"cssClass":"pl-c"}],[{"start":0,"end":46,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":29,"cssClass":"pl-k"},{"start":12,"end":29,"cssClass":"pl-en"},{"start":30,"end":37,"cssClass":"pl-c1"},{"start":38,"end":44,"cssClass":"pl-v"},{"start":46,"end":52,"cssClass":"pl-k"},{"start":53,"end":57,"cssClass":"pl-k"},{"start":58,"end":66,"cssClass":"pl-k"},{"start":67,"end":74,"cssClass":"pl-k"},{"start":76,"end":82,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":56,"cssClass":"pl-c"}],[{"start":0,"end":45,"cssClass":"pl-c"}],[{"start":0,"end":42,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":25,"cssClass":"pl-k"},{"start":12,"end":25,"cssClass":"pl-en"},{"start":26,"end":33,"cssClass":"pl-c1"},{"start":34,"end":40,"cssClass":"pl-v"},{"start":42,"end":48,"cssClass":"pl-k"},{"start":49,"end":53,"cssClass":"pl-k"},{"start":54,"end":62,"cssClass":"pl-k"},{"start":63,"end":70,"cssClass":"pl-k"},{"start":72,"end":79,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":68,"cssClass":"pl-c"}],[{"start":0,"end":47,"cssClass":"pl-c"}],[{"start":0,"end":70,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":22,"cssClass":"pl-k"},{"start":12,"end":22,"cssClass":"pl-en"},{"start":23,"end":30,"cssClass":"pl-c1"},{"start":31,"end":37,"cssClass":"pl-v"},{"start":39,"end":47,"cssClass":"pl-k"},{"start":48,"end":52,"cssClass":"pl-k"},{"start":53,"end":61,"cssClass":"pl-k"},{"start":62,"end":69,"cssClass":"pl-k"},{"start":78,"end":84,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":79,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":52,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":26,"cssClass":"pl-k"},{"start":12,"end":26,"cssClass":"pl-en"},{"start":27,"end":34,"cssClass":"pl-c1"},{"start":35,"end":44,"cssClass":"pl-v"},{"start":46,"end":52,"cssClass":"pl-k"},{"start":53,"end":57,"cssClass":"pl-k"},{"start":58,"end":66,"cssClass":"pl-k"},{"start":67,"end":74,"cssClass":"pl-k"},{"start":76,"end":83,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":84,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":61,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":35,"cssClass":"pl-k"},{"start":12,"end":35,"cssClass":"pl-en"},{"start":36,"end":43,"cssClass":"pl-c1"},{"start":44,"end":53,"cssClass":"pl-v"},{"start":55,"end":61,"cssClass":"pl-k"},{"start":62,"end":66,"cssClass":"pl-k"},{"start":67,"end":75,"cssClass":"pl-k"},{"start":76,"end":83,"cssClass":"pl-k"},{"start":85,"end":91,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":68,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":70,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":29,"cssClass":"pl-k"},{"start":12,"end":29,"cssClass":"pl-en"},{"start":30,"end":37,"cssClass":"pl-c1"},{"start":38,"end":47,"cssClass":"pl-v"},{"start":49,"end":57,"cssClass":"pl-k"},{"start":58,"end":62,"cssClass":"pl-k"},{"start":63,"end":70,"cssClass":"pl-k"},{"start":79,"end":86,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":52,"cssClass":"pl-c"}],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":12,"end":24,"cssClass":"pl-en"},{"start":27,"end":33,"cssClass":"pl-k"},{"start":34,"end":38,"cssClass":"pl-k"},{"start":39,"end":47,"cssClass":"pl-k"},{"start":48,"end":55,"cssClass":"pl-k"},{"start":57,"end":64,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":24,"end":30,"cssClass":"pl-mi"}],[],[],[{"start":4,"end":21,"cssClass":"pl-k"},{"start":12,"end":21,"cssClass":"pl-en"},{"start":22,"end":29,"cssClass":"pl-c1"},{"start":30,"end":36,"cssClass":"pl-v"},{"start":38,"end":44,"cssClass":"pl-k"},{"start":45,"end":49,"cssClass":"pl-k"},{"start":50,"end":58,"cssClass":"pl-k"},{"start":59,"end":66,"cssClass":"pl-k"},{"start":68,"end":72,"cssClass":"pl-c1"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":13,"end":20,"cssClass":"pl-c1"},{"start":23,"end":24,"cssClass":"pl-k"},{"start":25,"end":26,"cssClass":"pl-c1"},{"start":30,"end":31,"cssClass":"pl-k"},{"start":41,"end":47,"cssClass":"pl-mi"},{"start":50,"end":52,"cssClass":"pl-k"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":23,"end":25,"cssClass":"pl-k"}],[{"start":16,"end":22,"cssClass":"pl-k"},{"start":23,"end":27,"cssClass":"pl-c1"}],[],[],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":20,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":72,"cssClass":"pl-c"}],[{"start":0,"end":48,"cssClass":"pl-c"}],[{"start":0,"end":51,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":30,"cssClass":"pl-k"},{"start":12,"end":30,"cssClass":"pl-en"},{"start":31,"end":38,"cssClass":"pl-c1"},{"start":39,"end":43,"cssClass":"pl-v"},{"start":45,"end":53,"cssClass":"pl-k"},{"start":54,"end":58,"cssClass":"pl-k"},{"start":59,"end":67,"cssClass":"pl-k"},{"start":68,"end":75,"cssClass":"pl-k"},{"start":77,"end":84,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":49,"cssClass":"pl-c"}],[{"start":0,"end":79,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":32,"cssClass":"pl-k"},{"start":12,"end":32,"cssClass":"pl-en"},{"start":35,"end":41,"cssClass":"pl-k"},{"start":42,"end":46,"cssClass":"pl-k"},{"start":47,"end":55,"cssClass":"pl-k"},{"start":56,"end":63,"cssClass":"pl-k"},{"start":65,"end":71,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":50,"cssClass":"pl-c"}],[{"start":4,"end":28,"cssClass":"pl-k"},{"start":12,"end":28,"cssClass":"pl-en"},{"start":31,"end":37,"cssClass":"pl-k"},{"start":38,"end":42,"cssClass":"pl-k"},{"start":43,"end":51,"cssClass":"pl-k"},{"start":52,"end":59,"cssClass":"pl-k"},{"start":61,"end":67,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":55,"cssClass":"pl-c"}],[{"start":4,"end":30,"cssClass":"pl-k"},{"start":12,"end":30,"cssClass":"pl-en"},{"start":33,"end":39,"cssClass":"pl-k"},{"start":40,"end":44,"cssClass":"pl-k"},{"start":45,"end":53,"cssClass":"pl-k"},{"start":54,"end":61,"cssClass":"pl-k"},{"start":63,"end":69,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":69,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":30,"end":38,"cssClass":"pl-k"},{"start":39,"end":43,"cssClass":"pl-k"},{"start":44,"end":52,"cssClass":"pl-k"},{"start":53,"end":60,"cssClass":"pl-k"},{"start":62,"end":68,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":57,"cssClass":"pl-c"}],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":12,"end":24,"cssClass":"pl-en"},{"start":27,"end":33,"cssClass":"pl-k"},{"start":34,"end":38,"cssClass":"pl-k"},{"start":39,"end":47,"cssClass":"pl-k"},{"start":48,"end":55,"cssClass":"pl-k"},{"start":57,"end":63,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":21,"cssClass":"pl-c1"},{"start":34,"end":40,"cssClass":"pl-mi"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":55,"cssClass":"pl-c"}],[{"start":0,"end":62,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":33,"end":39,"cssClass":"pl-k"},{"start":40,"end":51,"cssClass":"pl-v"},{"start":53,"end":61,"cssClass":"pl-k"}],[{"start":8,"end":23,"cssClass":"pl-en"}],[{"start":29,"end":30,"cssClass":"pl-k"}],[{"start":29,"end":30,"cssClass":"pl-k"},{"start":44,"end":45,"cssClass":"pl-k"},{"start":46,"end":47,"cssClass":"pl-c1"}],[{"start":8,"end":10,"cssClass":"pl-k"}],[{"start":52,"end":53,"cssClass":"pl-k"},{"start":54,"end":60,"cssClass":"pl-en"},{"start":61,"end":68,"cssClass":"pl-c1"},{"start":69,"end":72,"cssClass":"pl-c1"},{"start":75,"end":89,"cssClass":"pl-en"}],[],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":102,"cssClass":"pl-c"}],[{"start":0,"end":46,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":12,"end":24,"cssClass":"pl-en"},{"start":30,"end":36,"cssClass":"pl-k"},{"start":37,"end":41,"cssClass":"pl-v"},{"start":43,"end":51,"cssClass":"pl-k"}],[{"start":26,"end":28,"cssClass":"pl-k"}],[{"start":35,"end":36,"cssClass":"pl-k"}],[{"start":8,"end":10,"cssClass":"pl-k"}],[{"start":58,"end":59,"cssClass":"pl-k"},{"start":60,"end":66,"cssClass":"pl-en"},{"start":67,"end":74,"cssClass":"pl-c1"},{"start":75,"end":78,"cssClass":"pl-c1"},{"start":81,"end":95,"cssClass":"pl-en"}],[],[],[],[{"start":4,"end":47,"cssClass":"pl-c"}],[{"start":4,"end":28,"cssClass":"pl-k"},{"start":12,"end":28,"cssClass":"pl-en"},{"start":31,"end":39,"cssClass":"pl-k"}],[{"start":28,"end":30,"cssClass":"pl-k"}],[],[],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":12,"end":24,"cssClass":"pl-en"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":15,"end":22,"cssClass":"pl-v"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":16,"end":25,"cssClass":"pl-v"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":16,"end":24,"cssClass":"pl-v"}],[{"start":6,"end":14,"cssClass":"pl-k"}],[{"start":13,"end":20,"cssClass":"pl-k"},{"start":26,"end":27,"cssClass":"pl-k"},{"start":28,"end":42,"cssClass":"pl-en"}],[{"start":8,"end":66,"cssClass":"pl-c"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":33,"end":35,"cssClass":"pl-k"},{"start":46,"end":57,"cssClass":"pl-en"},{"start":80,"end":94,"cssClass":"pl-s"}],[],[{"start":8,"end":42,"cssClass":"pl-c"}],[{"start":15,"end":29,"cssClass":"pl-en"}],[],[{"start":25,"end":26,"cssClass":"pl-k"}],[{"start":29,"end":30,"cssClass":"pl-k"},{"start":39,"end":40,"cssClass":"pl-k"},{"start":41,"end":42,"cssClass":"pl-c1"}],[],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":26,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":58,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":58,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":28,"end":35,"cssClass":"pl-c1"},{"start":36,"end":49,"cssClass":"pl-v"},{"start":51,"end":58,"cssClass":"pl-c1"},{"start":59,"end":72,"cssClass":"pl-v"},{"start":74,"end":82,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":27,"end":28,"cssClass":"pl-k"},{"start":29,"end":35,"cssClass":"pl-c1"},{"start":48,"end":54,"cssClass":"pl-mi"}],[{"start":20,"end":24,"cssClass":"pl-en"}],[{"start":34,"end":35,"cssClass":"pl-k"},{"start":36,"end":42,"cssClass":"pl-en"}],[],[],[],[{"start":27,"end":60,"cssClass":"pl-c"}],[{"start":12,"end":16,"cssClass":"pl-c1"}],[],[{"start":54,"end":55,"cssClass":"pl-k"},{"start":56,"end":60,"cssClass":"pl-c1"}],[{"start":24,"end":25,"cssClass":"pl-k"},{"start":26,"end":32,"cssClass":"pl-c1"},{"start":33,"end":38,"cssClass":"pl-c1"},{"start":39,"end":45,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":29,"cssClass":"pl-en"},{"start":45,"end":46,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":77,"cssClass":"pl-c"}],[{"start":0,"end":56,"cssClass":"pl-c"}],[{"start":0,"end":57,"cssClass":"pl-c"}],[{"start":0,"end":67,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":12,"end":24,"cssClass":"pl-en"},{"start":25,"end":32,"cssClass":"pl-c1"},{"start":33,"end":47,"cssClass":"pl-v"},{"start":49,"end":56,"cssClass":"pl-c1"},{"start":57,"end":71,"cssClass":"pl-v"}],[{"start":8,"end":16,"cssClass":"pl-k"}],[{"start":8,"end":12,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":17,"end":23,"cssClass":"pl-c1"}],[],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":31,"end":32,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":31,"end":32,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":25,"end":26,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":26,"end":28,"cssClass":"pl-k"},{"start":44,"end":53,"cssClass":"pl-s"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":26,"end":28,"cssClass":"pl-k"},{"start":55,"end":69,"cssClass":"pl-s"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":64,"cssClass":"pl-c"}],[{"start":0,"end":76,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":28,"end":35,"cssClass":"pl-c1"},{"start":36,"end":49,"cssClass":"pl-v"},{"start":51,"end":59,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":32,"end":33,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":70,"cssClass":"pl-c"}],[{"start":0,"end":49,"cssClass":"pl-c"}],[{"start":0,"end":50,"cssClass":"pl-c"}],[{"start":0,"end":72,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":29,"cssClass":"pl-k"},{"start":12,"end":29,"cssClass":"pl-en"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":16,"end":23,"cssClass":"pl-v"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":16,"end":23,"cssClass":"pl-v"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":15,"end":24,"cssClass":"pl-v"}],[{"start":6,"end":14,"cssClass":"pl-k"}],[{"start":45,"end":46,"cssClass":"pl-k"}],[{"start":45,"end":46,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":71,"cssClass":"pl-c"}],[{"start":0,"end":74,"cssClass":"pl-c"}],[{"start":0,"end":62,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":28,"cssClass":"pl-k"},{"start":12,"end":28,"cssClass":"pl-en"},{"start":29,"end":36,"cssClass":"pl-c1"},{"start":37,"end":50,"cssClass":"pl-v"},{"start":52,"end":59,"cssClass":"pl-c1"},{"start":60,"end":71,"cssClass":"pl-v"},{"start":73,"end":81,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":28,"end":29,"cssClass":"pl-k"},{"start":44,"end":45,"cssClass":"pl-k"}],[{"start":28,"end":29,"cssClass":"pl-k"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":29,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":71,"cssClass":"pl-c"}],[{"start":0,"end":72,"cssClass":"pl-c"}],[{"start":0,"end":61,"cssClass":"pl-c"}],[{"start":0,"end":54,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":26,"cssClass":"pl-k"},{"start":12,"end":26,"cssClass":"pl-en"},{"start":27,"end":34,"cssClass":"pl-c1"},{"start":35,"end":48,"cssClass":"pl-v"},{"start":50,"end":57,"cssClass":"pl-c1"},{"start":58,"end":64,"cssClass":"pl-v"},{"start":66,"end":74,"cssClass":"pl-k"},{"start":75,"end":82,"cssClass":"pl-k"},{"start":84,"end":91,"cssClass":"pl-c1"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":24,"end":25,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":23,"end":25,"cssClass":"pl-k"},{"start":35,"end":53,"cssClass":"pl-s"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":32,"end":33,"cssClass":"pl-k"},{"start":42,"end":43,"cssClass":"pl-k"}],[{"start":28,"end":29,"cssClass":"pl-k"}],[{"start":8,"end":33,"cssClass":"pl-en"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":29,"cssClass":"pl-en"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":66,"cssClass":"pl-c"}],[{"start":0,"end":59,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":28,"end":35,"cssClass":"pl-c1"},{"start":36,"end":49,"cssClass":"pl-v"},{"start":51,"end":59,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":17,"end":21,"cssClass":"pl-en"},{"start":22,"end":28,"cssClass":"pl-en"}],[{"start":8,"end":20,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":77,"cssClass":"pl-c"}],[{"start":0,"end":51,"cssClass":"pl-c"}],[{"start":0,"end":60,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":41,"cssClass":"pl-k"},{"start":12,"end":41,"cssClass":"pl-en"},{"start":42,"end":49,"cssClass":"pl-c1"},{"start":50,"end":59,"cssClass":"pl-v"},{"start":61,"end":67,"cssClass":"pl-c1"},{"start":68,"end":74,"cssClass":"pl-v"},{"start":76,"end":84,"cssClass":"pl-k"}],[{"start":45,"end":46,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":51,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":25,"cssClass":"pl-k"},{"start":12,"end":25,"cssClass":"pl-en"},{"start":26,"end":33,"cssClass":"pl-c1"},{"start":34,"end":43,"cssClass":"pl-v"},{"start":45,"end":53,"cssClass":"pl-k"}],[{"start":28,"end":29,"cssClass":"pl-k"},{"start":48,"end":54,"cssClass":"pl-mi"},{"start":55,"end":56,"cssClass":"pl-k"},{"start":57,"end":58,"cssClass":"pl-c1"}],[{"start":17,"end":20,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":59,"cssClass":"pl-c"}],[{"start":0,"end":50,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":22,"cssClass":"pl-k"},{"start":12,"end":22,"cssClass":"pl-en"},{"start":23,"end":29,"cssClass":"pl-c1"},{"start":30,"end":37,"cssClass":"pl-v"},{"start":39,"end":46,"cssClass":"pl-c1"},{"start":47,"end":53,"cssClass":"pl-v"},{"start":55,"end":63,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":16,"end":17,"cssClass":"pl-k"},{"start":48,"end":64,"cssClass":"pl-s"}],[{"start":38,"end":39,"cssClass":"pl-k"},{"start":40,"end":44,"cssClass":"pl-c1"}],[{"start":13,"end":20,"cssClass":"pl-k"},{"start":26,"end":27,"cssClass":"pl-k"},{"start":28,"end":42,"cssClass":"pl-en"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":35,"end":37,"cssClass":"pl-k"},{"start":38,"end":39,"cssClass":"pl-c1"},{"start":41,"end":50,"cssClass":"pl-s"}],[],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":25,"end":26,"cssClass":"pl-k"}],[{"start":25,"end":26,"cssClass":"pl-k"},{"start":37,"end":38,"cssClass":"pl-k"},{"start":39,"end":40,"cssClass":"pl-c1"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":20,"end":21,"cssClass":"pl-k"}],[{"start":17,"end":24,"cssClass":"pl-k"},{"start":32,"end":33,"cssClass":"pl-k"},{"start":34,"end":48,"cssClass":"pl-en"}],[{"start":35,"end":37,"cssClass":"pl-k"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":26,"end":28,"cssClass":"pl-k"},{"start":29,"end":30,"cssClass":"pl-c1"}],[{"start":23,"end":46,"cssClass":"pl-en"},{"start":47,"end":53,"cssClass":"pl-c1"},{"start":54,"end":59,"cssClass":"pl-c1"},{"start":60,"end":66,"cssClass":"pl-c1"},{"start":68,"end":69,"cssClass":"pl-k"}],[],[],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":53,"cssClass":"pl-c"}],[{"start":0,"end":52,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":25,"cssClass":"pl-k"},{"start":12,"end":25,"cssClass":"pl-en"},{"start":26,"end":32,"cssClass":"pl-c1"},{"start":33,"end":40,"cssClass":"pl-v"},{"start":42,"end":49,"cssClass":"pl-c1"},{"start":50,"end":56,"cssClass":"pl-v"},{"start":58,"end":66,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":47,"end":59,"cssClass":"pl-s"}],[{"start":38,"end":39,"cssClass":"pl-k"},{"start":40,"end":45,"cssClass":"pl-c1"}],[],[{"start":13,"end":20,"cssClass":"pl-k"},{"start":26,"end":27,"cssClass":"pl-k"},{"start":28,"end":42,"cssClass":"pl-en"}],[{"start":24,"end":26,"cssClass":"pl-k"}],[],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":20,"end":21,"cssClass":"pl-k"}],[{"start":12,"end":26,"cssClass":"pl-en"},{"start":57,"end":59,"cssClass":"pl-k"}],[],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":61,"cssClass":"pl-c"}],[{"start":0,"end":101,"cssClass":"pl-c"}],[{"start":0,"end":73,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":27,"cssClass":"pl-k"},{"start":12,"end":27,"cssClass":"pl-en"},{"start":28,"end":35,"cssClass":"pl-c1"},{"start":36,"end":49,"cssClass":"pl-v"},{"start":51,"end":59,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":34,"end":35,"cssClass":"pl-k"},{"start":36,"end":51,"cssClass":"pl-en"}],[{"start":8,"end":10,"cssClass":"pl-k"},{"start":12,"end":25,"cssClass":"pl-en"}],[{"start":12,"end":96,"cssClass":"pl-c"}],[{"start":12,"end":18,"cssClass":"pl-k"},{"start":43,"end":45,"cssClass":"pl-k"}],[{"start":12,"end":24,"cssClass":"pl-en"}],[],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":33,"cssClass":"pl-en"}],[{"start":8,"end":20,"cssClass":"pl-en"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":29,"cssClass":"pl-en"},{"start":60,"end":61,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":57,"cssClass":"pl-c"}],[{"start":0,"end":68,"cssClass":"pl-c"}],[{"start":0,"end":51,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":24,"cssClass":"pl-k"},{"start":12,"end":24,"cssClass":"pl-en"},{"start":25,"end":32,"cssClass":"pl-c1"},{"start":33,"end":46,"cssClass":"pl-v"},{"start":48,"end":54,"cssClass":"pl-c1"},{"start":55,"end":62,"cssClass":"pl-v"},{"start":64,"end":72,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":17,"cssClass":"pl-en"}],[{"start":32,"end":33,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":65,"cssClass":"pl-c"}],[{"start":0,"end":65,"cssClass":"pl-c"}],[{"start":0,"end":51,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":26,"cssClass":"pl-k"},{"start":12,"end":26,"cssClass":"pl-en"},{"start":27,"end":34,"cssClass":"pl-c1"},{"start":35,"end":42,"cssClass":"pl-v"},{"start":44,"end":52,"cssClass":"pl-k"},{"start":53,"end":60,"cssClass":"pl-k"},{"start":62,"end":69,"cssClass":"pl-c1"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":23,"end":24,"cssClass":"pl-k"}],[{"start":36,"end":37,"cssClass":"pl-k"},{"start":38,"end":39,"cssClass":"pl-c1"}],[{"start":31,"end":33,"cssClass":"pl-k"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":41,"cssClass":"pl-en"},{"start":59,"end":60,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":68,"cssClass":"pl-c"}],[{"start":0,"end":73,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":38,"cssClass":"pl-k"},{"start":12,"end":38,"cssClass":"pl-en"},{"start":39,"end":46,"cssClass":"pl-c1"},{"start":47,"end":54,"cssClass":"pl-v"},{"start":56,"end":63,"cssClass":"pl-c1"},{"start":64,"end":70,"cssClass":"pl-v"},{"start":72,"end":80,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":36,"end":37,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":34,"end":35,"cssClass":"pl-k"},{"start":56,"end":57,"cssClass":"pl-k"}],[{"start":36,"end":37,"cssClass":"pl-k"}],[{"start":31,"end":33,"cssClass":"pl-k"}],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":41,"cssClass":"pl-en"}],[],[],[{"start":4,"end":7,"cssClass":"pl-c"}],[{"start":0,"end":38,"cssClass":"pl-c"}],[{"start":0,"end":59,"cssClass":"pl-c"}],[{"start":0,"end":7,"cssClass":"pl-c"}],[{"start":4,"end":25,"cssClass":"pl-k"},{"start":12,"end":25,"cssClass":"pl-en"},{"start":26,"end":33,"cssClass":"pl-c1"},{"start":34,"end":47,"cssClass":"pl-v"},{"start":49,"end":56,"cssClass":"pl-k"}],[{"start":15,"end":22,"cssClass":"pl-k"},{"start":30,"end":31,"cssClass":"pl-k"}],[{"start":8,"end":15,"cssClass":"pl-k"},{"start":33,"end":45,"cssClass":"pl-s"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":27,"end":28,"cssClass":"pl-k"}],[{"start":33,"end":34,"cssClass":"pl-k"},{"start":59,"end":65,"cssClass":"pl-mi"},{"start":66,"end":67,"cssClass":"pl-k"},{"start":68,"end":69,"cssClass":"pl-c1"}],[{"start":51,"end":52,"cssClass":"pl-k"}],[{"start":20,"end":23,"cssClass":"pl-en"}],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[],[{"start":4,"end":30,"cssClass":"pl-k"},{"start":10,"end":30,"cssClass":"pl-en"}],[{"start":8,"end":15,"cssClass":"pl-c1"}],[],[{"start":8,"end":15,"cssClass":"pl-c1"}],[],[{"start":8,"end":15,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-c1"}],[{"start":8,"end":15,"cssClass":"pl-c1"}],[],[],[{"start":4,"end":26,"cssClass":"pl-k"},{"start":12,"end":26,"cssClass":"pl-en"}],[{"start":18,"end":26,"cssClass":"pl-k"},{"start":27,"end":36,"cssClass":"pl-v"}],[{"start":8,"end":14,"cssClass":"pl-c1"},{"start":15,"end":26,"cssClass":"pl-v"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":16,"end":37,"cssClass":"pl-v"}],[{"start":8,"end":15,"cssClass":"pl-c1"},{"start":16,"end":32,"cssClass":"pl-v"}],[{"start":6,"end":14,"cssClass":"pl-k"},{"start":15,"end":22,"cssClass":"pl-k"},{"start":24,"end":31,"cssClass":"pl-c1"},{"start":32,"end":43,"cssClass":"pl-v"}],[{"start":8,"end":15,"cssClass":"pl-k"}],[{"start":47,"end":49,"cssClass":"pl-k"},{"start":73,"end":75,"cssClass":"pl-k"}],[{"start":51,"end":53,"cssClass":"pl-k"}],[{"start":12,"end":30,"cssClass":"pl-s"}],[],[],[{"start":28,"end":34,"cssClass":"pl-k"}],[],[{"start":12,"end":28,"cssClass":"pl-c"}],[{"start":33,"end":34,"cssClass":"pl-k"},{"start":35,"end":42,"cssClass":"pl-en"}],[{"start":41,"end":42,"cssClass":"pl-k"},{"start":50,"end":71,"cssClass":"pl-en"}],[],[{"start":12,"end":86,"cssClass":"pl-c"}],[{"start":12,"end":19,"cssClass":"pl-k"}],[{"start":26,"end":35,"cssClass":"pl-en"},{"start":82,"end":84,"cssClass":"pl-k"}],[],[{"start":16,"end":33,"cssClass":"pl-s"}],[],[],[{"start":12,"end":87,"cssClass":"pl-c"}],[{"start":12,"end":18,"cssClass":"pl-c1"},{"start":35,"end":36,"cssClass":"pl-k"},{"start":70,"end":86,"cssClass":"pl-en"}],[{"start":12,"end":18,"cssClass":"pl-c1"},{"start":37,"end":38,"cssClass":"pl-k"},{"start":73,"end":89,"cssClass":"pl-en"}],[{"start":12,"end":19,"cssClass":"pl-k"},{"start":36,"end":38,"cssClass":"pl-k"},{"start":58,"end":75,"cssClass":"pl-s"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":32,"end":34,"cssClass":"pl-k"}],[{"start":16,"end":23,"cssClass":"pl-k"}],[{"start":53,"end":73,"cssClass":"pl-en"},{"start":76,"end":78,"cssClass":"pl-k"}],[{"start":58,"end":78,"cssClass":"pl-en"}],[{"start":20,"end":48,"cssClass":"pl-s"}],[],[],[{"start":12,"end":88,"cssClass":"pl-c"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":51,"end":53,"cssClass":"pl-k"},{"start":76,"end":78,"cssClass":"pl-k"}],[{"start":49,"end":69,"cssClass":"pl-en"},{"start":72,"end":73,"cssClass":"pl-k"},{"start":74,"end":75,"cssClass":"pl-c1"}],[],[{"start":16,"end":53,"cssClass":"pl-c"}],[{"start":31,"end":33,"cssClass":"pl-k"}],[],[{"start":12,"end":19,"cssClass":"pl-k"},{"start":36,"end":38,"cssClass":"pl-k"},{"start":69,"end":85,"cssClass":"pl-s"}],[{"start":12,"end":74,"cssClass":"pl-c"}],[{"start":12,"end":14,"cssClass":"pl-k"},{"start":32,"end":33,"cssClass":"pl-k"},{"start":34,"end":35,"cssClass":"pl-c1"}],[{"start":46,"end":47,"cssClass":"pl-k"},{"start":55,"end":73,"cssClass":"pl-en"},{"start":90,"end":91,"cssClass":"pl-k"},{"start":92,"end":93,"cssClass":"pl-c1"}],[],[],[],[],[{"start":38,"end":39,"cssClass":"pl-k"},{"start":50,"end":63,"cssClass":"pl-en"}],[],[{"start":38,"end":39,"cssClass":"pl-k"},{"start":40,"end":46,"cssClass":"pl-c1"},{"start":47,"end":52,"cssClass":"pl-c1"},{"start":53,"end":59,"cssClass":"pl-c1"},{"start":61,"end":62,"cssClass":"pl-k"}],[],[{"start":35,"end":36,"cssClass":"pl-k"},{"start":76,"end":77,"cssClass":"pl-k"},{"start":78,"end":79,"cssClass":"pl-c1"}],[{"start":12,"end":83,"cssClass":"pl-c"}],[{"start":12,"end":14,"cssClass":"pl-k"}],[{"start":37,"end":38,"cssClass":"pl-k"},{"start":39,"end":53,"cssClass":"pl-en"}],[],[{"start":14,"end":18,"cssClass":"pl-k"}],[{"start":37,"end":38,"cssClass":"pl-k"}],[],[],[{"start":24,"end":25,"cssClass":"pl-k"},{"start":36,"end":44,"cssClass":"pl-en"}],[],[],[],[],[],[],[{"start":12,"end":19,"cssClass":"pl-k"}],[{"start":28,"end":30,"cssClass":"pl-k"},{"start":48,"end":50,"cssClass":"pl-k"},{"start":68,"end":70,"cssClass":"pl-k"},{"start":71,"end":78,"cssClass":"pl-c1"},{"start":79,"end":80,"cssClass":"pl-c1"}],[{"start":16,"end":38,"cssClass":"pl-s"}],[],[],[{"start":29,"end":30,"cssClass":"pl-k"},{"start":39,"end":49,"cssClass":"pl-en"}],[{"start":26,"end":35,"cssClass":"pl-en"}],[{"start":26,"end":43,"cssClass":"pl-en"}],[],[{"start":20,"end":25,"cssClass":"pl-c1"},{"start":26,"end":32,"cssClass":"pl-c1"}],[],[],[{"start":26,"end":37,"cssClass":"pl-en"}],[],[],[],[],[],[],[],[{"start":12,"end":18,"cssClass":"pl-c1"},{"start":27,"end":28,"cssClass":"pl-k"},{"start":29,"end":46,"cssClass":"pl-en"},{"start":49,"end":50,"cssClass":"pl-k"},{"start":51,"end":52,"cssClass":"pl-c1"}],[],[{"start":12,"end":94,"cssClass":"pl-c"}],[{"start":12,"end":109,"cssClass":"pl-c"}],[{"start":17,"end":24,"cssClass":"pl-k"},{"start":34,"end":35,"cssClass":"pl-k"},{"start":36,"end":50,"cssClass":"pl-en"}],[{"start":21,"end":33,"cssClass":"pl-en"}],[],[{"start":12,"end":23,"cssClass":"pl-en"}],[],[],[{"start":8,"end":12,"cssClass":"pl-k"},{"start":13,"end":24,"cssClass":"pl-en"}],[{"start":12,"end":29,"cssClass":"pl-en"}],[],[],[],[],[],[],[],[],[],[{"start":8,"end":14,"cssClass":"pl-k"}],[],[]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/OffchainLabs/nitro-contracts/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/OffchainLabs/nitro-contracts/security/dependabot","repoSecurityAndAnalysisPath":"/OffchainLabs/nitro-contracts/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"RollupCore.sol","displayUrl":"https://github.com/OffchainLabs/nitro-contracts/blob/develop/src/rollup/RollupCore.sol?raw=true","headerInfo":{"blobSize":"24.7 KB","deleteInfo":{"deletePath":null,"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"1107f10","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FOffchainLabs%2Fnitro-contracts%2Fblob%2Fdevelop%2Fsrc%2Frollup%2FRollupCore.sol","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"678","truncatedSloc":"593"},"mode":"file"},"image":false,"isCodeownersFile":null,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Solidity","large":false,"loggedIn":false,"newDiscussionPath":"/OffchainLabs/nitro-contracts/discussions/new","newIssuePath":"/OffchainLabs/nitro-contracts/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/OffchainLabs/nitro-contracts/blob/develop/src/rollup/RollupCore.sol","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/OffchainLabs/nitro-contracts/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"OffchainLabs","repoName":"nitro-contracts","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":true,"symbols":[]}},"copilotUserAccess":null,"csrf_tokens":{"/OffchainLabs/nitro-contracts/branches":{"post":"b8EvZuxeSUlm0Ii2IvQauRpMBA-5uT8703CZsTmsm9qJGlkjbiicJ9ih6lBCeWZmgdoBditmIlv_6VPG2jdI1w"}}},"title":"nitro-contracts/src/rollup/RollupCore.sol at develop · OffchainLabs/nitro-contracts","locale":"en"}